{
  "associatedLayout": "Stage",
  "lastChangeTimeStamp": 0,
  "name": "HeroFSMDash",
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Actions",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "While there are a few different ways to implement a dash, this dash is intended to be viewed as a \"Dodge/Evade\" style dash.\nAs our character art doesn't have a custom dash animation, we have copied one frame from the running animation to make a new animation of \"dash\".\nFor this demo, we always want to ensure that the player cannot spam actions by holding down a button, so a toggle variable of \"hasDashed\" is set to 1. In other states, we need to ensure we're requiring this variable be 0 before we can dash.\nTo make it visible that we are dashing, we change the opacity to 100. This also gives us a shortcut when dealing with damage/knockback, as we can make Opacity of 255 a requirement before counting a \"Hit\".\nAt the start of this state we will reset the Dash timer, and unpause it as well."
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetAnimationName"
              },
              "parameters": [
                "Hero",
                "\"Dash\""
              ]
            },
            {
              "type": {
                "value": "ModVarObjet"
              },
              "parameters": [
                "Hero",
                "hasDashed",
                "=",
                "1"
              ]
            },
            {
              "type": {
                "value": "Opacity"
              },
              "parameters": [
                "Hero",
                "=",
                "230"
              ]
            },
            {
              "type": {
                "value": "ResetObjectTimer"
              },
              "parameters": [
                "Hero",
                "\"Dash\""
              ]
            },
            {
              "type": {
                "value": "UnPauseObjectTimer"
              },
              "parameters": [
                "Hero",
                "\"Dash\""
              ]
            },
            {
              "type": {
                "value": "ChangeLayer"
              },
              "parameters": [
                "Hero",
                "\"DashEffect\""
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Dash",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Before dashing, ensure the following are true:\nThe hero is currently in the dash animation.\nThe timer has not reached the max dash time.\nThe timer is not pasued."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "AnimationName"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\""
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "ObjectTimer"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\"",
                    "0.3"
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "ObjectTimerPaused"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\""
                  ]
                }
              ],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Begin the dash, depending on whether the player is flipped or not.\nThe length is used more as a speed here, since the timer is what decides when it stops."
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "FlippedX"
                      },
                      "parameters": [
                        "Hero"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "AddForceAL"
                      },
                      "parameters": [
                        "HeroHitbox",
                        "180",
                        "1500",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "FlippedX"
                      },
                      "parameters": [
                        "Hero"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "AddForceAL"
                      },
                      "parameters": [
                        "HeroHitbox",
                        "0",
                        "1500",
                        ""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Subtract the cost of the dash from the hero's current stamina. \nThe dash cost is a global variable so it can be easily changed later for game tuning.\nThis should only trigger once during a dash."
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Hero",
                        "heroStam",
                        "-",
                        "GlobalVariable(DashCost)"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "To ensure the dash has completed, ensure the following are true:\nThe timer has reached our desired max dash time\nThe animation is still \"Dash\".\nWe then change our player opacity back to normal, and pause the timer."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "ObjectTimer"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\"",
                    "0.3"
                  ]
                },
                {
                  "type": {
                    "value": "AnimationName"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Opacity"
                  },
                  "parameters": [
                    "Hero",
                    "=",
                    "255"
                  ]
                },
                {
                  "type": {
                    "value": "PauseObjectTimer"
                  },
                  "parameters": [
                    "Hero",
                    "\"Dash\""
                  ]
                },
                {
                  "type": {
                    "value": "ChangeLayer"
                  },
                  "parameters": [
                    "Hero",
                    "\"\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Transitions",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Idle",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Transition to idle state only if the animation is finished, the player is normal opacity, and the player is on the floor."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "AnimationEnded"
                  },
                  "parameters": [
                    "Hero"
                  ]
                },
                {
                  "type": {
                    "value": "Opacity"
                  },
                  "parameters": [
                    "Hero",
                    "=",
                    "255"
                  ]
                },
                {
                  "type": {
                    "value": "PlatformBehavior::IsOnFloor"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Hero",
                    "heroFSM",
                    "=",
                    "\"Idle\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "Fall",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Transition to fall state if the player is not on solid ground when the dash completes."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "AnimationEnded"
                  },
                  "parameters": [
                    "Hero"
                  ]
                },
                {
                  "type": {
                    "value": "PlatformBehavior::IsFalling"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                },
                {
                  "type": {
                    "value": "Opacity"
                  },
                  "parameters": [
                    "Hero",
                    "=",
                    "255"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Hero",
                    "heroFSM",
                    "=",
                    "\"Fall\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    }
  ]
}